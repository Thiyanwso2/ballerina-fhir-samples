// // Copyright (c) 2023, WSO2 LLC. (http://www.wso2.com). All Rights Reserved.

// This software is the property of WSO2 LLC. and its suppliers, if any.
// Dissemination of any information or reproduction of any material contained
// herein is strictly forbidden, unless permitted by WSO2 in accordance with
// the WSO2 Software License available at: https://wso2.com/licenses/eula/3.2
// For specific language governing the permissions and limitations under
// this license, please see the license as well as any agreement youâ€™ve
// entered into with WSO2 governing the purchase of this software and any
// associated services.
//
// AUTO-GENERATED FILE.
//
// This file is auto-generated by WSO2 Healthcare Team for implementing source system connections.
// Developers are allowed modify this file as per the requirement.

import wso2healthcare/healthcare.fhir.r4;

public isolated class InternationalPatientSourceConnect {

    *PatientSourceConnect;
    isolated function profile() returns r4:uri {
        return "http://hl7.org/fhir/StructureDefinition/Patient";
    }


    isolated function read(string id, r4:FHIRContext ctx) returns Patient|r4:FHIRError {  
        return get(id);
    }

    isolated function search(map<r4:RequestSearchParameter[]> searchParameters, r4:FHIRContext ctx) returns r4:Bundle|Patient[]|r4:FHIRError {

        //Implement source system connection here and retreive data.
        //Create FHIR resource from retreived data.
        r4:Patient[] patientsArray =  getAll();

        if patientsArray.length() ==0{
            return patientsArray;
        }

        r4:Patient[] response = [];
        if ctx.getRequestSearchParameters().hasKey("_id") {

            string? id = getTheId(ctx);    

            if id is string {
                 if patientsArray is r4:Patient[]{
                    foreach var p in patientsArray {
                        if p.id == id{
                            response.push(p);
                        }
                    }
                }             
            }      
        }

        if response.length() != 0{
            return response;
        } else {

            return patientsArray;
        }
    }

    isolated function create(r4:FHIRResourceEntity patient, r4:FHIRContext ctx) returns string|r4:FHIRError {

        //Implement source system connection here and persist FHIR resource.
        //Must respond with ID in order to create Location header

        r4:Patient patientRequest = <r4:Patient> patient.unwrap();
        
        if patientRequest is r4:Patient{
            string|error id = add(patientRequest);
            
            if id is string{
                return id;
            }
        }
        
        return "";
        
    }
}

public isolated function getTheId(r4:FHIRContext ctx) returns ()|string{

    r4:RequestSearchParameter[]? & readonly idArray = ctx.getRequestSearchParameter("_id");

    if idArray is r4:RequestSearchParameter[]{
       r4:RequestSearchParameter idObject = idArray[0];

        return idObject.value;
    }

    return null;      
}
